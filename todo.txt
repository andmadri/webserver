[X] 501 add html and image.
[X] Change the run function.
[X]	Make a new client class and store the client_fd, client stuff that where inside the client.
[X]	Work on handleResponse.
[X]	Create a response based on the client request
[X]	Make a separate requestParser class
[X]	readRequest in Client class
[X]	we should set default client_max_body if its not specified
	and probably limit the max size in config aswell
[X]	Assign a configuration server to the clients through the Server*
	One socket per unique IP/port and only use different configuration.
	Maybe the server map should become this: std::map<int, std::vector<Server*>> socketToServers;
	So we have a vector of servers for each socket.
[X]	CGI 

SHOULD WE:
[?]	Clean Up the Parsing
[?]	Check if GET has a body, if so then send 400 BAD REQUEST

PROBLEMS:
[X] we cannot connect two servers with same host and port but different server name: Bind failed with errno 98: Address already in use
[X?] When we have two servers only one works, the otherone returns 500 error for some reason, maybe we are not finding it properly
[] Servers work but for some reason the landing page for both is always the same, but if you go to /blog you can see the difference for instance
[] Post works sometimes??
[] Can there be two(more) servers with the same port, host and server name?
[] Can the program work without a server_name? It should
[] The first server for a host:port will be the default for this host:port (meaning it will respond to all requests that do not belong to another server)

TODO:

Code:
[X] Big files somehow crash the webserver when we upload them
[X] Client Max Body is not working properly when uploading
[X] Test with two servers and more
[X] HTTP Redirections!!
[X] Have a default server in case there is no configuration specified? Do we need to do this?
[X] How do we close the webserver? SIGNALS?
[X] Do we need actual forms or by uploading an image is good enough?
[X] Check why 2 sockets get created for 2 servers with same host/port
[X] Handle multiple server_names anddd
[X] handle same host - same port - no server name
[X] Optimize child process, make sure there's no zombie processes / handle time-out
[X] set env variables for CGI
[] Determine how to handle custom root and cgi-bin -> only check file extensions
[] We need to find a solution to /favicon.ico cause it keeps causing issues, thought I solved it but apparently I did so not :/

Test:
[] Signals - valgrind, open fd's, 
[] Test that the error codes are accurate
[] Test with changes in the configuration file, whatever happens, it should not crash
[] Error page Redirections
[] Is there already a default server if nothing matches???? -> Test with curl?

Clean up:
[] Makefile so we're not using wildcard anymore
[] Link header files in library so we can include <webserv.hpp> instead of "../src/server/webserv.hpp"